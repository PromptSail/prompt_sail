// @type {import('tailwindcss').Config}
import styles from './src/styles.json'
const  theme = 'light'
export default {
    content: ['./index.html', './src/**/*.{js,jsx,ts,tsx,vue}'],
    theme: {
        extend: {
            colors: {
                "Text/colorTextLight": styles.Colors[theme]["Text/colorTextLight"],
                "Text/colorTextDisabled": styles.Colors[theme]["Text/colorTextDisabled"],
                "Text/colorTextPlaceholder": styles.Colors[theme]["Text/colorTextPlaceholder"],
                "Text/colorTextDescription": styles.Colors[theme]["Text/colorTextDescription"],
                "Text/colorTextHeading": styles.Colors[theme]["Text/colorTextHeading"],
                "Text/colorTextQuaternary": styles.Colors.dark["Text/colorTextQuaternary"],
                "Text/colorTextTertiary": styles.Colors[theme]["Text/colorTextTertiary"],
                "Text/colorTextSecondary": styles.Colors[theme]["Text/colorTextSecondary"],
                "Text/colorText": styles.Colors[theme]["Text/colorText"],
                "Text/colorTextBase": styles.Colors[theme]["Text/colorTextBase"],
                "Background/colorBgBase": styles.Colors[theme]["Background/colorBgBase"],
                "Background/colorBgContainer": styles.Colors[theme]["Background/colorBgContainer"],
                "Background/colorBgElevated": styles.Colors[theme]["Background/colorBgElevated"],
                "Background/colorBgLayout": styles.Colors[theme]["Background/colorBgLayout"],
                "Background/colorBgSpotlight": styles.Colors[theme]["Background/colorBgSpotlight"],
                "Background/colorBgMask": styles.Colors[theme]["Background/colorBgMask"],
                "Background/colorBgTextHover": styles.Colors[theme]["Background/colorBgTextHover"],
                "Background/colorBgTextActive": styles.Colors[theme]["Background/colorBgTextActive"],
                "Background/colorBgContainerDisabled": styles.Colors[theme]["Background/colorBgContainerDisabled"],
                "Fill/colorFill": styles.Colors[theme]["Fill/colorFill"],
                "Fill/colorFillSecondary": styles.Colors[theme]["Fill/colorFillSecondary"],
                "Fill/colorFillTertiary": styles.Colors[theme]["Fill/colorFillTertiary"],
                "Fill/colorFillQuaternary": styles.Colors[theme]["Fill/colorFillQuaternary"],
                "Fill/colorFillContent": styles.Colors[theme]["Fill/colorFillContent"],
                "Fill/colorFillAlter": styles.Colors[theme]["Fill/colorFillAlter"],
                "Border/colorBorder": styles.Colors[theme]["Border/colorBorder"],
                "Border/colorBorderSecondary": styles.Colors[theme]["Border/colorBorderSecondary"],
                "Border/colorSplit": styles.Colors[theme]["Border/colorSplit"],
                "ControlItem/controlItemBgHover": styles.Colors[theme]["ControlItem/controlItemBgHover"],
                "ControlItem/controlItemBgActive": styles.Colors[theme]["ControlItem/controlItemBgActive"],
                "ControlItem/controlItemBgActiveHover": styles.Colors[theme]["ControlItem/controlItemBgActiveHover"],
                "Primary/colorPrimaryTextActive": styles.Colors[theme]["Primary/colorPrimaryTextActive"],
                "Primary/colorPrimaryText": styles.Colors[theme]["Primary/colorPrimaryText"],
                "Primary/colorPrimaryTextHover": styles.Colors[theme]["Primary/colorPrimaryTextHover"],
                "Primary/colorPrimaryActive": styles.Colors[theme]["Primary/colorPrimaryActive"],
                "Primary/colorPrimary": styles.Colors[theme]["Primary/colorPrimary"],
                "Primary/colorPrimaryHover": styles.Colors[theme]["Primary/colorPrimaryHover"],
                "Primary/colorPrimaryBorderHover": styles.Colors[theme]["Primary/colorPrimaryBorderHover"],
                "Primary/colorPrimaryBorder": styles.Colors[theme]["Primary/colorPrimaryBorder"],
                "Primary/colorPrimaryBgHover": styles.Colors[theme]["Primary/colorPrimaryBgHover"],
                "Primary/colorPrimaryBg": styles.Colors[theme]["Primary/colorPrimaryBg"],
                "Success/colorSuccessBg": styles.Colors[theme]["Success/colorSuccessBg"],
                "Success/colorSuccessBgHover": styles.Colors[theme]["Success/colorSuccessBgHover"],
                "Success/colorSuccessBorder": styles.Colors[theme]["Success/colorSuccessBorder"],
                "Success/colorSuccessBorderHover": styles.Colors[theme]["Success/colorSuccessBorderHover"],
                "Success/colorSuccessHover": styles.Colors[theme]["Success/colorSuccessHover"],
                "Success/colorSuccess": styles.Colors[theme]["Success/colorSuccess"],
                "Success/colorSuccessActive": styles.Colors[theme]["Success/colorSuccessActive"],
                "Success/colorSuccessTextHover": styles.Colors[theme]["Success/colorSuccessTextHover"],
                "Success/colorSuccessText": styles.Colors[theme]["Success/colorSuccessText"],
                "Success/colorSuccessTextActive": styles.Colors[theme]["Success/colorSuccessTextActive"],
                "Warning/colorWarningBg": styles.Colors[theme]["Warning/colorWarningBg"],
                "Warning/colorWarningBgHover": styles.Colors[theme]["Warning/colorWarningBgHover"],
                "Warning/colorWarningBorder": styles.Colors[theme]["Warning/colorWarningBorder"],
                "Warning/colorWarningBorderHover": styles.Colors[theme]["Warning/colorWarningBorderHover"],
                "Warning/colorWarningHover": styles.Colors[theme]["Warning/colorWarningHover"],
                "Warning/colorWarning": styles.Colors[theme]["Warning/colorWarning"],
                "Warning/colorWarningActive": styles.Colors[theme]["Warning/colorWarningActive"],
                "Warning/colorWarningTextHover": styles.Colors[theme]["Warning/colorWarningTextHover"],
                "Warning/colorWarningText": styles.Colors[theme]["Warning/colorWarningText"],
                "Warning/colorWarningTextActive": styles.Colors[theme]["Warning/colorWarningTextActive"],
                "Error/colorErrorBg": styles.Colors[theme]["Error/colorErrorBg"],
                "Error/colorErrorBgHover": styles.Colors[theme]["Error/colorErrorBgHover"],
                "Error/colorErrorBorder": styles.Colors[theme]["Error/colorErrorBorder"],
                "Error/colorErrorBorderHover": styles.Colors[theme]["Error/colorErrorBorderHover"],
                "Error/colorErrorHover": styles.Colors[theme]["Error/colorErrorHover"],
                "Error/colorError": styles.Colors[theme]["Error/colorError"],
                "Error/colorErrorActive": styles.Colors[theme]["Error/colorErrorActive"],
                "Error/colorErrorTextHover": styles.Colors[theme]["Error/colorErrorTextHover"],
                "Error/colorErrorText": styles.Colors[theme]["Error/colorErrorText"],
                "Error/colorErrorTextActive": styles.Colors[theme]["Error/colorErrorTextActive"],
                "colorLink": styles.Colors[theme]["colorLink"],
                "colorLinkHover": styles.Colors[theme]["colorLinkHover"],
                "colorLinkActive": styles.Colors[theme]["colorLinkActive"],
                "colorIcon": styles.Colors[theme]["colorIcon"],
                "colorIconHover": styles.Colors[theme]["colorIconHover"],
            },
            boxShadow: {
                "shadowPrimpary": styles.global.Effects.boxShadow["box-shadow"],
                "shadowPrimpary1": styles.global.Effects.boxShadow["box-shadow2"],
                "shadowPrimpary2": styles.global.Effects.boxShadow["box-shadow3"],
                "shadowSecondary": styles.global.Effects.boxShadowSecondary['box-shadow'],
                "shadowSecondary2": styles.global.Effects.boxShadowSecondary['box-shadow2'],
                "shadowSecondary3": styles.global.Effects.boxShadowSecondary['box-shadow3'],
                "FocusPrimary": styles.global.Effects.FocusPrimary['box-shadow'],
                "FocusYellow": styles.global.Effects.FocusYellow['box-shadow'],
                "FocusRed": styles.global.Effects.FocusRed['box-shadow'],
            }
        }
    },
    corePlugins:{
        preflight: false
    },
    plugins: []
};
